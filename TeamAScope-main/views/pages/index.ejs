<!DOCTYPE html>
<html>
<head>
   <%- include ("../partials/header.ejs") %>
</head>
<div class ="headerDiv">
            <header>
                <img class="headerlogo" src="scope_logo.png" alt="logo">
                <div class = headerButtons>
                    <a class="btna"><button class="headerbtn">Lunch Buddies</button></a>
                    <a class="btna" href  = "scopeCup.html"><button class="headerbtn">Scope Cup</button></a>
                    <a class="btna"><button class="eboardbtn">E-Board</button></a>
                </div>               
            </header> 
        </div>
<body id = 'body'>
<h1>Lunch Buddies</h1>
<p><strong>Next Cycle By: <strong>Wednesday October 17, 2021</p>


    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-firestore.js"></script>
   
    <script type="module">
    
    
    import { initializeApp } from "https://www.gstatic.com/firebasejs/9.4.1/firebase-app.js";
                import { getAnalytics } from "https://www.gstatic.com/firebasejs/9.4.1/firebase-analytics.js";
                import { getFirestore, collection, getDocs } from "https://www.gstatic.com/firebasejs/9.4.1/firebase-firestore.js"
                // Your web app's Firebase configuration
                const firebaseConfig = {
                    apiKey: "AIzaSyBfm8wb3j0F_ZcbQR1aixfvdte8ZhrO3yQ",
                    authDomain: "scope-app-caa99.firebaseapp.com",
                    projectId: "scope-app-caa99",
                    storageBucket: "scope-app-caa99.appspot.com",
                    messagingSenderId: "592284989274",
                    appId: "1:592284989274:web:9104926068605e7b5f6563",
                    measurementId: "G-54PYQG6TC2"
                };
                // Initialize Cloud Firestore through Firebase
                firebase.initializeApp(firebaseConfig);
                var db = firebase.firestore();
    
                function setMember(name, buddy, team) {
				db.collection("members").doc(name).set({
				    buddy: buddy,
				    team: team
				})
				.then(() => {
                    console.log("Member document successfully added!");
                }).then(() => {
                    location.reload();
                })
                .catch((error) => {
                    console.error("Error writing member document: ", error);
                });
			}
          
          function createMembersTable() {
                    let table = document.createElement('table');
            table.classList.add("table");
                    document.getElementById('body').appendChild(table);
                    let rowHead = document.createElement('tr');
            rowHead.classList.add("headTable");
                    let heading1 = document.createElement('th');
            heading1.classList.add("th");
                    heading1.innerHTML = "Member";
                    let heading2 = document.createElement('th');
            heading2.classList.add("th");
                    heading2.innerHTML = "Lunch Buddy";
                    rowHead.appendChild(heading1);
                    rowHead.appendChild(heading2);
                    table.appendChild(rowHead);
                    var bool = false;
                    db.collection("members").get().then((querySnapshot) => {
                        querySnapshot.forEach((doc) => {
                            let row = document.createElement('tr');
                    
                            if(bool) {
                                row.classList.add("evenTable");
                            } else {
                                row.classList.add("oddTable");
                            }
                            let rowData1 = document.createElement('td');
                rowData1.classList.add("td");
                            rowData1.innerHTML = doc.id;
                            let rowData2 = document.createElement('td');
                rowData2.classList.add("td");
                            rowData2.innerHTML = doc.data().buddy;
                            row.appendChild(rowData1);
                            row.appendChild(rowData2);
                            table.appendChild(row);
                            bool = !bool;
                        });
                    });
                }
                createMembersTable();
                

                let shuffleBtn = document.createElement("button");
                shuffleBtn.classList.add("button");
                shuffleBtn.innerHTML = "Shuffle";
                shuffleBtn.onclick = function () {
                    var roster = [];
                    console.log("onclick pressed")
                    db.collection("members").get().then((querySnapshot) => {
                        querySnapshot.forEach((doc) => {
                            roster.push(doc.id);
                        });
                        // Shuffle array of member names
                        for (let i = roster.length - 1; i > 0; i--) {
                            const j = Math.floor(Math.random() * (i + 1));
                            // Swap elements
                            const temp = roster[i];
                            roster[i] = roster[j];
                            roster[j] = temp;
                        }
                        // Split roster into two halves, where r2.length = r1.length or r1.length + 1
                        const r1 = roster.slice(0, roster.length/2);
                        const r2 = roster.slice(roster.length/2, roster.length);
                        // Iterate through subarray and create buddy pairings
                        for(let i = 0; i < r2.length; i++) {
                            // Check if r2[i] has a corresponding buddy in r1[i] or is the odd one out
                            if(i < r1.length) {
                                // r2[i] is buddies with r1[i]
                                var docRef1 = db.collection("members").doc(r2[i]);
                                docRef1.get().then((doc) => {
                                    if (doc.exists) {
                                        setMember(r2[i], r1[i], doc.data().team);
                                    }
                                }).catch((error) => {
                                    console.log("Error getting member document:", error);
                                });
                                // r1[i] is buddies with r2[i]
                                var docRef2 = db.collection("members").doc(r1[i]);
                                docRef2.get().then((doc) => {
                                    if (doc.exists) {
                                        setMember(r1[i], r2[i], doc.data().team);
                                    }
                                }).catch((error) => {
                                    console.log("Error getting member document:", error);
                                });
                            } else {
                                // r2[i] does not have a buddy (odd one out)
                                var docRef = db.collection("members").doc(r2[i]);
                                docRef.get().then((doc) => {
                                    if (doc.exists) {
                                        setMember(r2[i], "Treat Yourself :)", doc.data().team);
                                    }
                                }).catch((error) => {
                                    console.log("Error getting member document:", error);
                                });
                            }

                
                            
                        }
                         
                    }
                    
                );
            
                
                }
                // location.reload();
                document.body.appendChild(shuffleBtn);
    </script>


</body>
</html>
